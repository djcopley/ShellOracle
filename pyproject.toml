[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "shelloracle"
description = """ShellOracle is a pluggable terminal utility that takes a natural language description of a \
command and substitutes it into your terminal buffer."""
readme = "README.md"
license = { file = "LICENSE" }
dynamic = ["version"]
authors = [
    { name = "Daniel Copley", email = "djcopley@proton.me" },
]
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
]
dependencies = [
    "httpx",
    "openai",
    "prompt-toolkit",
    "yaspin",
    "tomlkit",
    "tomli >= 1.1.0; python_version < '3.11'"
]

[project.scripts]
shor = "shelloracle.__main__:main"

[project.urls]
Homepage = "https://github.com/djcopley/ShellOracle"
Repository = "https://github.com/djcopley/ShellOracle.git"
Issues = "https://github.com/djcopley/ShellOracle/issues"

[tool.hatch.version]
source = "vcs"

[tool.hatch.envs.hatch-test]
dependencies = [
    "pytest~=8.3",
    "pytest-cov~=5.0",
    "pytest-sugar~=1.0",
    "pytest-xdist~=3.6",
    "pytest-asyncio~=0.24",
    "pytest-httpx~=0.30",
    "coverage[toml]~=5.0",
]

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
template = "hatch-test"
extra-dependencies = [
    "mypy~=1.0",
]

[tool.hatch.envs.types.scripts]
check = [
    "mypy {args:src/shelloracle}",
    "mypy --explicit-package-bases tests"
]

[tool.pytest.ini_options]
pythonpath = "src"
addopts = [
    "--import-mode=importlib",
]
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
source = ["src/"]
branch = true
parallel = true

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/*" = ["INP001", "ARG"]
